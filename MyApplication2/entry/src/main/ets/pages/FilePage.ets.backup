import fileio from '@ohos.fileio';
import { BusinessError } from '@kit.BasicServicesKit';
import fs from '@ohos.file.fs';
import { buffer } from '@kit.ArkTS';

@Entry
@Component
struct FilePage {
  @State message: string = 'File page'
  @State paramsString: string = ''

  build() {
    Row() {
      Column() {
        Text(this.message)
          .fontSize(50)
          .fontWeight(FontWeight.Bold)

        Text(this.paramsString)
          .fontSize(30)
          .margin(20)
          .fontWeight(FontWeight.Bold)

        Button() {
          Text('getData')
            .fontSize(30)
            .fontWeight(FontWeight.Bold)
        }
        .type(ButtonType.Capsule)
        .margin({
          top: 20
        })
        .backgroundColor('#0D9FFB')
        .width('40%')
        .height('5%')
        .onClick(() => {
          const applicationContext = getContext().getApplicationContext()
          console.info('applicationContext.cacheDir====>' + applicationContext.cacheDir)
          console.info('applicationContext.filesDir====>' + applicationContext.filesDir)
          let filePath = applicationContext.cacheDir + '/output.txt'

          fs.access(filePath).then((res: boolean) => {
            if (res) {
              let file = fs.openSync(filePath, fs.OpenMode.READ_ONLY);
              let arrayBuffer = new ArrayBuffer(4096);
              fs.read(file.fd, arrayBuffer).then((readLen: number) => {
                console.info("read file data succeed");
                let buf = buffer.from(arrayBuffer, 0, readLen);
                console.info(`The content of file: ${buf.toString()}`);
                this.paramsString = buf.toString()
              }).catch((err: BusinessError) => {
                console.error("read file data failed with error message: " + err.message + ", error code: " + err.code);
              }).finally(() => {
                fs.closeSync(file);
              });
            } else {
              this.paramsString = 'file not exists'
            }
          }).catch((err: BusinessError) => {
            console.error("access failed with error message: " + err.message + ", error code: " + err.code);
          });



        })
      }
      .width('100%')
    }
    .height('100%')
  }
}

